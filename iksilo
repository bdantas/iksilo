#!/bin/sh

# iksilo v5.2
# Bruno "GNUser" Dantas GPLv3

# user variable:
keyboard_id=auto # au forigu 'auto' kaj metu id-numeron de via klavaro lau 'xinput --list'

# internal variables:
lockfile=/tmp/lock.iksilo
saved_options=/tmp/xkbmap-saved
dzen2_pid_file=/tmp/iksilo-dzen2-pid

main()
{
	create_lockfile
	find_keyboard_id
	save_keyboard_options
	add_keyboard_options
	build_array
	create_pseudoicon
	monitor_keyboard
}

create_lockfile()
{
	 # ensure only one instance of this script is running at a time
	(umask 222; echo $$ >$lockfile) || { echo "iksilo is already running, exiting now."; exit; }
}

find_keyboard_id()
{
	if [ "$keyboard_id" = "auto" ]; then
		keyboard_id=$(xinput list --id-only | xargs -n 1 -I+ sh -c "xinput list + | grep -wv + | grep XIKeyClass" | egrep -o '[0-9]+')
	fi
}

save_keyboard_options()
{
	setxkbmap -query >$saved_options
	# strange: 'query' outputs colons and spaces, but 'config' will want equals and quotes
	sed -i -e 's/: */="/' -e 's/$/"/' $saved_options
}

add_keyboard_options()
{ 
	setxkbmap -option lv3:ralt_switch,esperanto:qwerty
}

build_array() # actually just a series of variables (e.g., array_38=a array_39=s array_40=d etc.)
{
	xmodmap -pke >/tmp/keymap
	while read line; do
		keycode="$(echo $line | cut -d' ' -f 2)"
		key="$(echo $line | cut -d' ' -f 4)"
		eval array_"$keycode"="$key"
	done </tmp/keymap
	rm /tmp/keymap
}

create_pseudoicon()
{
	if which dzen2 >/dev/null; then
		echo "IKSO" | dzen2 -fg "white" -bg "green" -w 40 -h 20 -x 10 -y 10 -p -e '' & 
		echo $! >$dzen2_pid_file
	fi
}

monitor_keyboard()
{
	memory="--"
	xinput test $keyboard_id | awk '/press/ {print $3; system("")}' | while read keycode; do # system("") disables awk buffer
		key=$(eval echo \$array_$keycode)
		memory=$(echo "${memory}${key}" | grep -o '..$')
		case $memory in
			cx) replace ISO_Level3_Shift+c ;;
			gx) replace ISO_Level3_Shift+g ;;
			hx) replace ISO_Level3_Shift+h ;;
			jx) replace ISO_Level3_Shift+j ;;
			sx) replace ISO_Level3_Shift+s ;;
			ux) replace ISO_Level3_Shift+u ;;
		esac
	done
}

replace()
{
	xdotool key BackSpace BackSpace "$1"
}

restore_keyboard_options()
{
	# first clear all options, then restore original options
	setxkbmap -option
	setxkbmap -config $saved_options
}

die_gracefully()
{ 
	restore_keyboard_options
	kill $(cat $dzen2_pid_file)
	rm -f $lockfile
	pkill -KILL -f iksilo
}
trap die_gracefully INT HUP TERM

[ "$1" = "start" ] && main
[ "$1" = "stop" ] && die_gracefully
